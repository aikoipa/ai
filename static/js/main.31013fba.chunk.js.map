{"version":3,"sources":["hooks/useWindowSize.js","compontents/LayoutDownArrow.js","App.js","serviceWorker.js","index.js"],"names":["useWindowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","LayoutDownArrow","props","setWidth","className","style","borderLeft","borderRight","borderTop","color","App","WOW","init","src","alt","align","rowSpan","href","target","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.31013fba.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n    \n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n\nexport default useWindowSize;","import React, { useEffect, useState } from 'react';\nimport useWindowSize from '../hooks/useWindowSize';\n\nfunction LayoutDownArrow(props) {\n\n  const [width, setWidth] = useState(0);\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    setWidth(windowSize.width / 2);\n  }, [windowSize])\n\n  return (\n    <div \n      className=\"layout-arrow-down\" \n      style={{ \n        borderLeft: `${width}px solid transparent`,\n        borderRight: `${width}px solid transparent`,\n        borderTop: `50px solid ${props.color}`,\n      }} \n    />\n  );\n}\n\nexport default LayoutDownArrow;","import React, { useEffect } from 'react';\nimport WOW from 'wow.js';\nimport './App.css';\nimport LayoutDownArrow from './compontents/LayoutDownArrow';\n\nfunction App() {\n\n  useEffect(() => {\n    new WOW().init();\n  }, [])\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"section2\">\n        {/* <div className=\"round-top\" /> */}\n         <img src=\"images/poster.png\" alt=\"poster\" className=\"poster\"/>\n        {/* <div className=\"round-bottom\" /> */}\n      </div>\n      <LayoutDownArrow color=\"#19A79D\"/>\n\n      <div className=\"section3\">\n        <h2 className=\"wow animate__animated animate__pulse\">과정소개</h2>\n\n        <p className=\" wow animate__animated animate__bounceInLeft\">\n          본 과정은 인공지능 큐레이터 양성과정으로, 다양한 산업분야에서 각광 받고 있는 인공지능 기술을 응용하고 융합할 수 있는 인재를 양성합니다.<br />\n          6개월(960시간) 동안의 \"Python의 기초부터, 최신 딥러닝 트렌드까지 양질의 이론 및 실습강의\"가 제공되고,<br />\n          이와 같이 기업의 전문 개발자와 함께 프로젝트를 수행하여, 산업과 기업에서 원하는 핵심인재로 성장 할 수 있습니다.<br/>\n        </p>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n              <div className=\"single-guarantee mb-30 wow animate__animated animate__fadeIn\">\n                  <div className=\"guarantee-content\">\n                      <h4>기초-심화</h4>\n                      <p>인공지능의 기초를 위한<br/>Python부터, 기계학습, 딥러닝, 미니프로젝트까지 양질 교육제공</p>\n                  </div>\n              </div>\n          </div>\n          <div className=\"col-md-6\">\n              <div className=\"single-guarantee mb-30 wow animate__animated animate__fadeIn\">\n                  <div className=\"guarantee-content\">\n                      <h4>네트워크</h4>\n                      <p>협력기관과 국내 대기업, 중소기업, 강소기업과의<br/>네트워크를 활용한, 교육 및 인턴쉽제공</p>\n                  </div>\n              </div>\n          </div>\n          <div className=\"col-md-6\">\n              <div className=\"single-guarantee mb-30 wow animate__animated animate__fadeIn\">\n                  <div className=\"guarantee-content\">\n                      <h4>멘토진</h4>\n                      <p>글로벌 인공지능 오픈소스 프로젝트 전문개발자<br/> AI기업 현업 개발자 멘토진 구성</p>\n                  </div>\n              </div>\n          </div>\n          <div className=\"col-md-6\">\n              <div className=\"single-guarantee mb-30 wow animate__animated animate__fadeIn\">\n                  <div className=\"guarantee-content\">\n                      <h4>실전형 프로젝트</h4>\n                      <p>AI기업에서 원하는 교육생이 원하는 실전형 프로그램 제공</p>\n                  </div>\n              </div>\n          </div>\n        </div>\n      </div>\n    \n      <div className=\"section-green\">\n        <h2 className=\"wow animate__animated animate__pulse\">I. 인공지능을 위한 Python</h2>\n\n        <table className=\"course-table wow animate__animated animate__bounceInLeft\" align=\"center\">\n          <tbody>\n            <tr>\n              <th rowSpan={4}>1. Python 기초</th><td>Python 개요</td>\n            </tr>\n            <tr>\n              <td>Python Type</td>\n            </tr>\n            <tr>\n              <td>Python Operator & Statement & Expression</td>\n            </tr>\n            <tr>\n              <td>기본 Function</td>\n            </tr>\n            <tr>\n              <th rowSpan={3}>2. Python<br/>Multi-Paradigm</th><td>Functional Programming</td>\n            </tr>\n            <tr>\n              <td>Object-Oriented Programming</td>\n            </tr>\n            <tr>\n              <td>Modular Programming</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <LayoutDownArrow color=\"#06beb6\"/>\n      <div className=\"section-white\">\n        <h2 className=\"wow animate__animated animate__pulse\">II. Python 기반의 데이터 처리</h2>\n\n        <table className=\"course-table wow animate__animated animate__bounceInRight\" align=\"center\">\n            <tbody>\n            <tr>\n              <th rowSpan={2}>1. Numeric<br />Programming</th><td>Numpy</td>\n            </tr>\n            <tr>\n              <td>SciPy</td>\n            </tr>\n            <tr>\n              <th rowSpan={2}>2. Pandas</th><td>Data preprocessing</td>\n            </tr>\n            <tr>\n              <td>EDA(Exploratory Data Analaysis</td>\n            </tr>\n            <tr>\n              <th>3. Visualization</th><td></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <LayoutDownArrow color=\"#fff\"/>\n      <div className=\"section-green\">\n        <h2 className=\"wow animate__animated animate__pulse\">III. 인공지능과 기계학습</h2>\n\n        <table className=\"course-table wow animate__animated animate__bounceInLeft\" align=\"center\">\n          <tbody>\n          <tr>\n            <th>1. 전통적인 인공지능기법</th><td></td>\n          </tr>\n          <tr>\n            <th rowSpan={8}>\n              2. Scikit-Learn / State Model을 활용한\n              Machine Learning\n            </th>\n            <td>기계학습 소개 및 개요</td>\n          </tr>\n          <tr>\n            <td>기계학습을 위한 전처리 기법</td>\n          </tr>\n          <tr>\n            <td>기본 기계학습 알고리즘</td>\n          </tr>\n          <tr>\n            <td>Ensemble Model</td>\n          </tr>\n          <tr>\n            <td>시계열 모델</td>\n          </tr>\n          <tr>\n            <td>비지도 학습</td>\n          </tr>\n          <tr>\n            <td>모델 평가</td>\n          </tr>\n          <tr>\n            <td>Scikit-Learn Customizing Model & Tuning</td>\n          </tr>\n          <tr>\n            <th>3. Visualization</th><td></td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <LayoutDownArrow color=\"#06beb6\"/>\n      <div className=\"section-white\">\n        <h2 className=\"wow animate__animated animate__pulse\">IV. 딥러닝(Deep Learning)</h2>\n\n        <table className=\"course-table wow animate__animated animate__bounceInRight\" align=\"center\">\n          <tbody>\n          <tr>\n            <th rowSpan={3}>\n              1. 딥러닝 기초\n            </th>\n            <td>딥러닝 개요 및 역사</td>\n          </tr>\n          <tr>\n            <td>Percetion & Neural Network 이해</td>\n          </tr>\n          <tr>\n            <td>딥러닝 모델 overfitting 문제해결, 최적화</td>\n          </tr>\n          <tr>\n            <th rowSpan={8}>\n              2. 영상처리 & CNN 자연어처리 & RNN\n            </th>\n            <td>영상처리 기법</td>\n          </tr>\n          <tr>\n            <td>CNN 개요</td>\n          </tr>\n          <tr>\n            <td>CNN 심화 이론</td>\n          </tr>\n          <tr>\n            <td>자연어 처리 개요</td>\n          </tr>\n          <tr>\n            <td>RNN 개요</td>\n          </tr>\n          <tr>\n            <td>RNN 심화 이론</td>\n          </tr>\n          <tr>\n            <td>Custom Recurrent Nerual Network 구현</td>\n          </tr>\n          <tr>\n            <td>Auto Encoder & GAN</td>\n          </tr>\n          <tr>\n            <th>3. 최신 딥러닝 기법</th><td></td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <LayoutDownArrow color=\"#fff\"/>\n      <div className=\"section1\">\n        <div className=\"text-section\">\n          <h1>\n            프로젝트 기반 문제 해결형<br/>\n            인공지능 큐레이터 양성 과정\n          </h1>\n          <a href=\"https://forms.gle/cjnpLkB6wCsocN689\" target=\"_blank\">\n            접수신청 바로가기\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}